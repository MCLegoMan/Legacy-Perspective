plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'legacy-looming' version '1.4-SNAPSHOT'
	id "com.github.breadmoirai.github-release" version "2.4.1"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
}

loom {
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(legacy.yarn(project.minecraft_version, project.yarn_mappings))
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 8
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}

githubRelease {
	token rootProject.file(".env").text.readLines().get(0).replace("GITHUB=", "").replace("\"", "")
	owner "MCLegoMan"
	repo "Legacy-Perspective"
	tagName "${project.github_tag}"
	targetCommitish "${project.github_branch}"
	releaseName "${project.title}"
	generateReleaseNotes false
	body rootProject.file("CHANGELOG.md").text
	draft false
	if (project.version_type == "release") prerelease false
	else prerelease true
	releaseAssets tasks.remapJar
	allowUploadToExisting.set false
	overwrite false
	dryRun false
	apiEndpoint "https://api.github.com"
	client
}
